@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Web
@using SecondAPI.Domain.ViewModel
@using SecondAPI.Services.Interfaces
@using SecondAPI.Services.ViewServices
@inject ILivroService LivroService
@inject IUsuarioService UsuarioService


@page "/Cadastro"
<PageTitle>Home</PageTitle>

<h1>Bem vindo! Faça seu cadastro preenchendo os campos abaixo.</h1>
<br />


<EditForm Model="Usuario" OnSubmit="Cadastrar" FormName="Cadastro">

    <InputText id="Nome" @bind-Value="Usuario!.Nome" placeholder="Nome"/>
    <br /> <br />
    <InputText id="sobrenome" @bind-Value="Usuario.Sobrenome" placeholder="Sobrenome" />
    <br /> <br />
    <InputText id="email" type="email" @bind-Value="Usuario.Email" placeholder="Email" />
    <br /> <br />
    <InputText id="telefone" @bind-Value="Usuario.Telefone" placeholder="Telefone" />
    <br /> <br />
    <InputText id="senha" @bind-Value="Usuario.Senha" type="password" placeholder="Senha" />
    <br /> <br />
    <button type="submit">Salvar</button>
</EditForm>

@if (cadastroRealizado == true)
{
    <p>Cadastro realizado! Clique <a href="/login"> aqui </a> para fazer seu login</p>
}

@if (camposVazios == true)
{
    <p>Campos obrigatórios estão em branco! Preencha ao menos nome, e-mail e senha.</p>
}

@code {
    [SupplyParameterFromForm]
    private UsuarioViewModel? Usuario { get; set; }

    [Inject]
    private UsuarioViewService? UsuarioViewService {get; set;}

    protected override void OnInitialized() => Usuario ??= new();
    bool camposVazios;
    bool cadastroRealizado;

    public async Task Cadastrar()
    {
        if (Usuario.Nome == "" || Usuario.Email == "" || Usuario.Senha == "")
        {
            camposVazios = true;
        }
        else
        {
        await UsuarioService.CriarUsuarioAsync(Usuario);
        cadastroRealizado = true;          
        }
        Usuario = new();
    }
}